/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.16).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.nhisyamj.clinic.api;

import com.nhisyamj.clinic.model.Order;
import org.springframework.core.io.Resource;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import java.util.List;

/**
 *<h1>OrderApi</h1>
 * Class description
 * <p>
 ***
 * @author: Hisyam Johan
 * @since: 16/08/2018
 * @version: 1.0
 * Time: 10:50 PM
 * Email: nhisyamj@gmail.com
 ***
 */
@Api(value = "order", description = "the order API")
public interface OrderApi {

    @ApiOperation(value = "Add result", nickname = "addPdfResult", notes = "", tags={ "pdf result", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created") })
    @RequestMapping(value = "/order/result/pdf",
        consumes = { "multipart/form-data" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addPdfResult(@ApiParam(value = "file detail") @Valid @RequestPart("file") MultipartFile pdfResult);


    @ApiOperation(value = "Get result", nickname = "getPdfResult", notes = "", response = Resource.class, tags={ "pdf result", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Resource.class) })
    @RequestMapping(value = "/order/result/pdf",
        produces = { "multipart/form-data" }, 
        method = RequestMethod.GET)
    ResponseEntity<Resource> getPdfResult();


    @ApiOperation(value = "Get order", nickname = "orderGet", notes = "", tags={ "order", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/order",
        method = RequestMethod.GET)
    ResponseEntity<Void> orderGet();


    @ApiOperation(value = "Create order", nickname = "orderPost", notes = "", tags={ "order", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created") })
    @RequestMapping(value = "/order",
        method = RequestMethod.POST)
    ResponseEntity<Void> orderPost(@ApiParam(value = ""  )  @Valid @RequestBody Order body);


    @ApiOperation(value = "Update order", nickname = "orderPut", notes = "", tags={ "order", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content") })
    @RequestMapping(value = "/order",
        method = RequestMethod.PUT)
    ResponseEntity<Void> orderPut();


    @ApiOperation(value = "Update result", nickname = "updatePdfResult", notes = "", tags={ "pdf result", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content") })
    @RequestMapping(value = "/order/result/pdf",
        consumes = { "multipart/form-data" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updatePdfResult(@ApiParam(value = "file detail") @Valid @RequestPart("file") MultipartFile pdfResult);

}
