/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.nhisyamj.clinic.api;

import com.nhisyamj.clinic.model.Staff;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-10-11T19:00:11.469Z")

@Api(value = "staff", description = "the staff API")
public interface StaffApi {

    @ApiOperation(value = "Add staff", nickname = "addStaff", notes = "Adding staff", tags={ "staff", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created") })
    @RequestMapping(value = "/staff",
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addStaff(@ApiParam(value = "staff details need to be added") @Valid @RequestBody Staff body);


    @ApiOperation(value = "Get list of staff", nickname = "getStaff", notes = "get list of staff and details", response = Staff.class, responseContainer = "List", tags={ "staff", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Staff.class, responseContainer = "List") })
    @RequestMapping(value = "/staff",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Staff>> getStaff();


    @ApiOperation(value = "Get list of staff find by type", nickname = "staffFindByTypeGet", notes = "Get list of staff find type", response = Staff.class, responseContainer = "List", tags={ "staff", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Staff.class, responseContainer = "List") })
    @RequestMapping(value = "/staff/findByType",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Staff>> staffFindByTypeGet(@ApiParam(value = "") @Valid @RequestParam(value = "staffName", required = false) String staffName, @ApiParam(value = "") @Valid @RequestParam(value = "staffId", required = false) Long staffId);


    @ApiOperation(value = "Update staff", nickname = "updateStaff", notes = "update staff detail", tags={ "staff", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content") })
    @RequestMapping(value = "/staff",
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateStaff(@ApiParam(value = "staff details need to be updated") @Valid @RequestBody Staff body);

}
